@using System.Reflection
<!DOCTYPE html>
<html lang="en">

<head>
    <title>WireMocker</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="stylesheet" href="app.css?v=@VersionHash"/>
    <link rel="stylesheet" href="Tirax.Application.WireMocker.styles.css?v=@VersionHash"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
    <link href="_content/MudBlazor/MudBlazor.min.css?v=@VersionHash" rel="stylesheet"/>
    <HeadOutlet @rendermode="InteractiveServer"/>
</head>

<body>
    <Routes @rendermode="InteractiveServer" />

    <script src="_framework/blazor.web.js?v=@VersionHash"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js?v=@VersionHash"></script>
    <script>
        window.downloadFileFromStream = async (fileName, contentStreamReference) => {
            const arrayBuffer = await contentStreamReference.arrayBuffer();
            const blob = new Blob([arrayBuffer]);
            const url = URL.createObjectURL(blob);
            const anchorElement = document.createElement('a');
            anchorElement.href = url;
            anchorElement.download = fileName ?? '';
            anchorElement.click();
            anchorElement.remove();
            URL.revokeObjectURL(url);
        }
    </script>
</body>

</html>

@code {

    public static readonly MudTheme Theme = new() {
        PaletteLight = new PaletteLight {
            Primary = "#fd7d43",
            Secondary = "#0096ef",
            Tertiary = "#eee100",

            Background = "#fff8f6",
            Surface = "#fae4dc",

            AppbarBackground = "#fd7d43",

            // color for text field's border
            LinesInputs = "#4f2c7e",
            LinesDefault = "#f00",

            Divider = "#0d0",
            DividerLight = "#0f0",

            // used for hovering
            ActionDefault = "#cd59ff"
        },
        PaletteDark = new PaletteDark {
            // inverse colors of the palette light above
            Primary = "#b34100",
            Secondary = "#0282bc",
            Tertiary = "#e6e600",

            Background = "#1a0600",
            Surface = "#351f17",

            AppbarBackground = "#e34a02",

            // color for text field's border
            LinesInputs = "#7742bd",
            LinesDefault = "#f00",

            Divider = "#0d0",
            DividerLight = "#0f0",

            // used for hovering
            ActionDefault = "#cd59ff"
        }
    };

    public static readonly string VersionHash =
        ((AssemblyInformationalVersionAttribute?)typeof(Program).Assembly
                                                                .GetCustomAttribute(typeof(AssemblyInformationalVersionAttribute)))!
       .InformationalVersion.GetHashCode().ToString();

}