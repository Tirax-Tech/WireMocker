@page "/"
@rendermode InteractiveServer

@using System.Reactive.Concurrency
@using System.Reactive.Disposables
@using System.Reactive.Linq

@inherits ReactiveInjectableComponentBase<DashboardViewModel>

@inject IScheduler AppScheduler

<AppBarTitle Title="Log Entries"/>
<SectionContent SectionName="appbar-actions">
    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" Edge="Edge.End" />
</SectionContent>

<MudScrollToTop>
    <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.ArrowUpward" />
</MudScrollToTop>

<MudText Typo="Typo.h3">Dashboard</MudText>

@foreach (var entry in ViewModel!.LogEntries){
    <MudGrid @key="entry.Guid">
        <MudItem md="6" Class="pa-8">
            <RequestPanel Entry="entry"/>
        </MudItem>

        <MudItem md="6" Class="pa-8">
            <ResponsePanel Entry="entry"/>
        </MudItem>
    </MudGrid>
}

@code {

    public Dashboard()
    {
        this.WhenActivated(disposable => {
            ViewModel!.Changed
                      .Throttle(AppSettings.UpdateThrottle, AppScheduler)
                      .Subscribe(_ => StateHasChanged())
                      .DisposeWith(disposable);
        });
    }
}