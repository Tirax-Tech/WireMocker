@using DynamicData.Binding
@using global::RZ.Foundation.Types
@inherits AppReactiveComponent<EditServiceDetailViewModel>

<MudStack>
    <MudPaper Class="mud-background pa-8">
        <MudStack>
            <MudTextField T="string" Variant="Variant.Filled" Label="Endpoint name" @bind-Text="ViewModel!.EndpointName" />

            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h5">Path</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.subtitle1">Leave the path empty if you are not using it.</MudText>
                    <MatcherView ViewModel="ViewModel!.PathModel" />
                </MudCardContent>
            </MudCard>
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h5">Headers</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudStack>
                        <MudButton StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Primary"
                                   OnClick="@ViewModel!.AddHeader.OnExecute()">
                            Add header rule
                        </MudButton>
                        @foreach(var header in ViewModel!.Headers){
                            <HeaderView ViewModel="header" @key="header.Id" />
                        }
                    </MudStack>
                </MudCardContent>
            </MudCard>
        </MudStack>
    </MudPaper>

    <MudStack Row="true" Justify="Justify.FlexEnd">
        @if (ViewModel!.IsNew){
            <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add"
                       Disabled="!canSave" OnClick="@ViewModel!.Save.OnExecute()">Add</MudButton>
        }
        else{
            <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save"
                       Disabled="!canSave" OnClick="@ViewModel!.Save.OnExecute()">Save</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Cancel"
                       Disabled="!canCancel" OnClick="@ViewModel!.Cancel.OnExecute()">Cancel</MudButton>
        }
    </MudStack>
</MudStack>

@code {
    readonly MutableRef<bool> canSave = new();
    readonly MutableRef<bool> canCancel = new();

    public EditServiceDetail() {
        this.WhenActivated(disposables => {
            TrackChanges(disposables,
                ViewModel!.Save.CanExecute.Bind(canSave).Ignore(),
                ViewModel!.Cancel.CanExecute.Bind(canCancel).Ignore(),
                ViewModel!.Headers.ObserveCollectionChanges().Ignore()
                );
        });
    }

}