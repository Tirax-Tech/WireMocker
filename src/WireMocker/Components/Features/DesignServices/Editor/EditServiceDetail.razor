@using global::RZ.Foundation.Types
@inherits AppReactiveComponent<EditServiceDetailViewModel>

<MudStack>
    <MudPaper Class="mud-background pa-8">
        <MudStack>
            <MudTextField T="string" Variant="Variant.Filled" Label="(Optional) Endpoint name" @bind-Text="ViewModel!.EndpointName" />

            <MudExpansionPanels>
                <MudExpansionPanel Text="Path" IsInitiallyExpanded="true">
                    <MatcherView ViewModel="ViewModel!.PathModel" />
                </MudExpansionPanel>
                <MudExpansionPanel Text="Headers">
                    <table style="width: 100%">
                        <colgroup>
                            <col style="width: 50px" />
                            <col />
                            <col />
                            <col style="width: 50px" />
                        </colgroup>
                        <thead>
                        <tr>
                            <th> </th>
                            <th>Header</th>
                            <th>Value</th>
                            <th> </th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td><MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Secondary" /></td>
                            <td><MudTextField T="string" Variant="Variant.Filled" Label="Header"/></td>
                            <td><MudTextField T="string" Variant="Variant.Filled" Label="Value"/></td>
                        </tr>
                        </tbody>
                    </table>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudStack>
    </MudPaper>

    <MudStack Row="true" Justify="Justify.FlexEnd">
        @if (ViewModel!.IsNew){
            <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add"
                       Disabled="!canSave" OnClick="@ViewModel!.Save.OnExecute()">Add</MudButton>
        }
        else{
            <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save"
                       Disabled="!canSave" OnClick="@ViewModel!.Save.OnExecute()">Save</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Cancel"
                       Disabled="!canCancel" OnClick="@ViewModel!.Cancel.OnExecute()">Cancel</MudButton>
        }
    </MudStack>
</MudStack>

@code {
    readonly MutableRef<bool> canSave = new();
    readonly MutableRef<bool> canCancel = new();

    public EditServiceDetail() {
        this.WhenActivated(disposables => {
            Bind(ViewModel!.Save.CanExecute, canSave).DisposeWith(disposables);
            Bind(ViewModel!.Cancel.CanExecute, canCancel).DisposeWith(disposables);
        });
    }

}